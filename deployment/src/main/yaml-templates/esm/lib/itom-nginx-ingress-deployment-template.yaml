apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "itom-nginx-ingress-deployment"
  namespace: "${namespace}"
  labels:
    app: "itom-nginx-ingress"
    itsmaService: "itom-ingress"
  annotations:
    deployment.microfocus.com/runlevel: "UP"
    deployment.microfocus.com/default-replica-count: "2"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "itom-nginx-ingress"
      itsmaService: "itom-ingress"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: "30%"
      maxUnavailable: "30%"
  template:
    metadata:
      labels:
        app: "itom-nginx-ingress"
        itsmaService: "itom-ingress"
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: "ScheduleAnyway"
        labelSelector:
          matchLabels:
            app: "itom-nginx-ingress"
            itsmaService: "itom-ingress"
      serviceAccountName: "itom-nginx-ingress"
      securityContext:
        runAsUser: 1999
        runAsGroup: 1999
        fsGroup: 1999
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "Worker"
                operator: "In"
                values:
                - "label"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app"
                  operator: "In"
                  values:
                  - "itom-nginx-ingress"
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 0
      containers:
      - image: "itom-docker.svsartifactory.swinfra.net:443/hpeswitomsandbox/itom-itsma-nginx-ingress:1.3.109"
        name: "nginx-ingress-lb-front"
        resources:
          limits:
            cpu: 3
            memory: "3Gi"
          requests:
            cpu: "500m"
            memory: "256Mi"
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          capabilities:
            add:
            - "NET_BIND_SERVICE"
        livenessProbe:
          httpGet:
            path: "/healthz"
            port: 10254
            scheme: "HTTP"
          initialDelaySeconds: 5
          failureThreshold: 15
          timeoutSeconds: 6
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "/health.sh"
          initialDelaySeconds: 5
          timeoutSeconds: 6
        env:
        - name: "INGRESS_PARMS"
          value: "--annotations-prefix=ingress.kubernetes.io --default-ssl-certificate=${namespace}/nginx-default-secret --enable-ssl-chain-completion=false --default-backend-service=${namespace}/maya-server-service --v=2 --configmap=${namespace}/itom-nginx-ingress-configmap --watch-namespace=${namespace} --update-status=false --watch-ingress-without-class=true --http-port=8080 --https-port=8443"
        - name: "POD_NAME"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.name"
        - name: "POD_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "CONNECTION_TIMEOUT"
          value: "180"
        - name: "worker_processes"
          value: "8"
        - name: "suite_mode"
          value: X_MODE
        - name: "time_zone"
          value: America/Los_Angeles
        - name: "LWSSO_DOMAIN_NAME"
          value: swinfra.net
        - name: "TZ"
          value: America/Los_Angeles
        - name: "ACCESS_LOG_SIZE"
          value: 500M
        - name: "ACCESS_LOG_ROTATE"
          value: "20"
        volumeMounts:
        - name: "nfs"
          mountPath: "/var/log/nginx"
          subPathExpr: "logs/ingress/frontend/$(POD_NAME)"
        - name: "nfs"
          mountPath: "/tmp/log/nginx"
          subPathExpr: "logs/ingress/frontend/$(POD_NAME)"
        - name: "logratate-cfg"
          mountPath: "/etc/logrotate.d/"
        - name: "nginx-status"
          mountPath: "/var/lib/misc/"
        ports:
        - containerPort: 8443
          name: "https-svc"
        - containerPort: 10254
          name: "healthz-svc"
      volumes:
      - name: "logratate-cfg"
        emptyDir: {}
      - name: "nginx-status"
        emptyDir: {}
      - name: "nfs"
        persistentVolumeClaim:
          claimName: "maya-volume"
